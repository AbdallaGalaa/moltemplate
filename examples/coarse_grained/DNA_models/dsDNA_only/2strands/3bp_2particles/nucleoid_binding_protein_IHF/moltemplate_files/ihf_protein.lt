import "dna_forcefield.lt"

IHFProtein {

  # The "IHFProtein" molecule type contains only 1 atom ("x"):

  # AtomID  MolID AtomType charge   X   Y   Z
  write("Data Atoms") {
    $atom:x $mol:. @atom:X  0.0    0.0 0.0 0.0
  }

  # There is no particular reason this particle has to interact with
  # any other particles except by bonded interactions.
  write_once("In Settings") {
    #             i      j                  ke*qi*qj/eps_r     cutoff
    #                                         qi=qj=0 (turn off interactions)
    pair_coeff @atom:X @atom:*         yukawa   0.000          7.001
  }

  # BOND PARAMETERS for bonds involving IHFProtein particles:
  #   (I could put this elsewhere, but why not here?)
  #
  # 2-body (bonded) interactions:
  #   Ubond(r) = (k/2)*(r-0)^2
  #       however LAMMPS uses this formula instead:
  #            =   K * (r-0)^2       (K=k/2)
  #   http://lammps.sandia.gov/doc/bond_harmonic.html
  #   The corresponding command is:
  #   bond_coeff     bondType    bondstylename   K    r0

  write_once("In Settings") {
    bond_coeff     @bond:IHF_DNA       harmonic  100.0  1.4
    bond_coeff     @bond:DNA_DNA_IHF   harmonic  100.0  1.4
  }

  # We choose the mass so that different particles oscillate 
  # at the same frequency.  This way we can maximize the timestep.
  # We are not going to get the dynamics correct anyway.
  # The DNA particles will be under heavy strain due to the interaction
  # with this protein, so we change their type (to elevate their mass)
  # Mass is measured in units of dt^2*(kCal/Mole)/nm^2, where dt=timestep=1.0.
  write_once("Data Masses") {
    @atom:X          2553.29 # same as the mass of each particle in the DNA
  }

  # ------- OPTIONAL --------
  # If we want, we can assign the particles in the DNA which are bound
  # to this IHFProtein to a higher mass, to compensate for the additional
  # stress that we have placed them under.  (It's possible that doing so might
  # improve numerical stability and/or allow use of larger timesteps.)
  # It doesn't really matter where we define this new particle type.  So why
  # not define it here?  (NOTE: This molecule does not contain a particle
  # of this type.

  write_once("Data Masses") {
    @atom:Highmass   5000.0  # optional type of particle which has higher mass
  }

  # We also must define non-bonded interactions for between each new 
  # type of particle, and all other particles it might interact with.
  write_once("In Settings") {
    #             i      j                  ke*qi*qj/eps_r     cutoff
    #                                         qi=qj=3
    pair_coeff @atom:Highmass @atom:*  yukawa   3.73575        7.001
    pair_coeff @atom:Highmass @atom:X  yukawa   0.000          7.001
  }
  # ------- end of OPTIONAL --------

} # IHFProtein

